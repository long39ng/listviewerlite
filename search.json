[{"path":"https://long39ng.github.io/listviewerlite/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 listviewerlite authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://long39ng.github.io/listviewerlite/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Long Nguyen. Author, maintainer. Kate Rose Morley. Author.            CSS custom properties <https://iamkate.com/code/tree-views/>","code":""},{"path":"https://long39ng.github.io/listviewerlite/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nguyen L, Morley KR (2023). listviewerlite: View Nested Lists Interactively. https://github.com/long39ng/listviewerlite, https://long39ng.github.io/listviewerlite/.","code":"@Manual{,   title = {listviewerlite: View Nested Lists Interactively},   author = {Long Nguyen and Kate Rose Morley},   year = {2023},   note = {https://github.com/long39ng/listviewerlite, https://long39ng.github.io/listviewerlite/}, }"},{"path":"https://long39ng.github.io/listviewerlite/index.html","id":"listviewerlite","dir":"","previous_headings":"","what":"View Nested Lists Interactively","title":"View Nested Lists Interactively","text":"listview() creates collapsible tree view R lists using HTML CSS, without need JavaScript.","code":""},{"path":"https://long39ng.github.io/listviewerlite/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"View Nested Lists Interactively","text":"can install development version listviewerlite GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"long39ng/listviewerlite\")"},{"path":"https://long39ng.github.io/listviewerlite/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"View Nested Lists Interactively","text":"","code":"library(listviewerlite)  x <- list(   list(id = \"a\", val = 2),   list(     id = \"b\",     val = 1,     children = list(       list(id = \"b1\", val = 2.5),       list(         id = \"b2\",         val = 8,         children = list(           list(id = \"b21\", val = 4)         )       )     )   ),   list(     id = \"c\",     val = 8,     children = list(       list(id = \"c1\"),       list(id = \"c2\", val = 1)     )   ) )  listview(x)"},{"path":"https://long39ng.github.io/listviewerlite/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"View Nested Lists Interactively","text":"package inspired {listviewer}, wraps JavaScript libraries jsoneditor react-json-view. implementation listview() function inspired utils::str() lobstr::tree(). custom CSS properties collapsible tree view copied modified blog post Kate Rose Morley.","code":""},{"path":"https://long39ng.github.io/listviewerlite/reference/listview.html","id":null,"dir":"Reference","previous_headings":"","what":"View object as collapsible nested list in HTML — listview","title":"View object as collapsible nested list in HTML — listview","text":"View object collapsible nested list HTML","code":""},{"path":"https://long39ng.github.io/listviewerlite/reference/listview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View object as collapsible nested list in HTML — listview","text":"","code":"listview(x)"},{"path":"https://long39ng.github.io/listviewerlite/reference/listview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View object as collapsible nested list in HTML — listview","text":"x atomic vector list","code":""},{"path":"https://long39ng.github.io/listviewerlite/reference/listview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"View object as collapsible nested list in HTML — listview","text":"list() shiny.tag class can converted HTML string via .character() saved file save_html().","code":""},{"path":"https://long39ng.github.io/listviewerlite/reference/listview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"View object as collapsible nested list in HTML — listview","text":"","code":"x <- list(   list(id = \"a\", val = 2),   list(     id = \"b\",     val = 1,     children = list(       list(id = \"b1\", val = 2.5),       list(         id = \"b2\",         val = 8,         children = list(           list(id = \"b21\", val = 4)         )       )     )   ),   list(     id = \"c\",     val = 8,     children = list(       list(id = \"c1\"),       list(id = \"c2\", val = 1)     )   ) )  listview(x)"},{"path":"https://long39ng.github.io/listviewerlite/reference/listviewerlite-package.html","id":null,"dir":"Reference","previous_headings":"","what":"listviewerlite: View Nested Lists Interactively — listviewerlite-package","title":"listviewerlite: View Nested Lists Interactively — listviewerlite-package","text":"Creates collapsible tree view R lists using HTML CSS, without need JavaScript.","code":""},{"path":[]},{"path":"https://long39ng.github.io/listviewerlite/reference/listviewerlite-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"listviewerlite: View Nested Lists Interactively — listviewerlite-package","text":"Maintainer: Long Nguyen long.nguyen@uni-bielefeld.de (ORCID) Authors: Kate Rose Morley (CSS custom properties <https://iamkate.com/code/tree-views/>)","code":""}]
